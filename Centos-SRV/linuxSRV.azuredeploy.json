{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
	"vmName": {
      "type": "string",
      "metadata": {
        "description": "Name for the Virtual Machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the VNET."
      }
    },
	"vnetRG": {
      "type": "string",
      "metadata": {
        "description": "RG of the VNET."
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Subnet."
      }
    },    
    "vmSize": {
      "type": "string",
      "defaultValue" : "Standard_A0",
      "metadata": {
        "description": "VM Size: Standard_B1ms, Standard_A1_v2, ... "
      }
    },
    "diagnosticStorageAccount": {
      "type": "string",
      "metadata": {
        "description": "Storage Account for the VM diagnostics."
      }
	  }
  },
  "variables": {
    "diagnosticStorageAccount": "[parameters('diagnosticStorageAccount')]",
    "imagePublisher": "OpenLogic",
    "imageOffer": "CentOS",
	  "imageVersion": "7.3",        
    "vmName": "[parameters('vmName')]",
    "vmSize": "[parameters('vmSize')]",
    "subnetName": "[parameters('subnetName')]",
    "nicName": "[concat(parameters('vmName'),'-Nic1')]",
    "virtualNetworkName": "[parameters('vnetName')]",
    "vnetID": "[resourceId(parameters('vnetRG'), 'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",	
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"
  },
  "resources": [  	 
    {
      "apiVersion": "2017-06-01",	  
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [                
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "PrivateIpAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [        
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('diagnosticStorageAccount')), '2016-01-01').primaryEndpoints.blob)]"
          }
        }
      }
    },
   {
    "apiVersion": "2015-01-01",
    "type": "Microsoft.Resources/deployments",
    "name": "SetStaticIP",
    "dependsOn": [
      "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
    ],    
    "properties": {
      "mode": "Incremental",
      "parameters": {
          "vmName": {            
            "value": "[parameters('vmName')]"            
          }
      },
      "template": {
        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
        "contentVersion": "1.0.0.0",
        "parameters": {
          "vmName": {
            "type": "string",            
            "metadata": {
              "description": "Name for the Virtual Machine."
            }
          }
        },
        "variables": {},
        "resources": [
            {
                "apiVersion": "2016-03-30",
                "name": "[variables('nicName')]",
                "location":"[resourceGroup().location]",
                "type": "Microsoft.Network/networkInterfaces",
                "properties": {
                    "ipConfigurations": [
                      {
                        "name": "ipconfig1",
                        "properties": {
                          "privateIPAllocationMethod": "Static",
                          "privateIPAddress": "[reference(concat('Microsoft.Network/networkInterfaces/', variables('nicName'))).ipConfigurations[0].properties.privateIPAddress]",
                          "subnet": {
                             "id": "[variables(concat('SubnetRef','-NIC','0'))]"
                            }
                        }
                      }
                    ]          
                }
            }                                
        ],
        "outputs": {}
        }
      }
  }
  ],
  "outputs": {   
  }
}